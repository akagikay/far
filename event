wait(60)
--[[
    Script: Headless Horseman Treat Bag Auto-Claimer (Optimized)
    Description: This script automatically claims the Headless Horseman's treat bag every 10 minutes.
    The required remote bypass is loaded only ONCE at the start for better performance.
    This is a standalone script.
]]

-- Wait for the game to fully load to ensure all services and APIs are available.
if not game:IsLoaded() then
    game.Loaded:Wait()
end
warn("Game loaded. Initializing Treat Bag Auto-Claimer...")
task.wait(5) -- Extra delay for safety

-- Main function to handle the entire auto-claiming process
local function startAutoClaimer()
    
    -- 1. Load the remote bypass script a single time.
    -- If this fails, the script will not proceed, as claiming is impossible without it.
    warn("[Bypass] Loading the remote bypass script required for claiming...")
    local bypassLoaded, bypassError = pcall(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Xenijo/AdoptMe-RemoteBypass/main/Bypass.lua"))()
    end)

    if not bypassLoaded then
        warn("[FATAL ERROR] Failed to load the remote bypass script. The auto-claimer cannot run. Error: " .. tostring(bypassError))
        return -- Stop the function if the bypass fails
    end
    
    warn("[Bypass] Remote bypass loaded successfully.")
    task.wait(0.5) -- Short wait after loading the bypass

    -- 2. Define the function that will be called repeatedly to claim the bag.
    -- This function now assumes the bypass is already active.
    local function claimBag()
        warn("[TreatBag] Attempting to claim the treat bag...")
        
        -- Invoke the server to claim the bag
        local claimSuccess, claimResult = pcall(function()
            -- We wait for each child in the path to avoid errors if the game is still loading assets
            local API = game:GetService("ReplicatedStorage"):WaitForChild("API", 5)
            local HalloweenAPI = API and API:WaitForChild("HalloweenEventAPI", 5)
            local ClaimRemote = HalloweenAPI and HalloweenAPI:WaitForChild("ClaimTreatBag", 5)
            
            if ClaimRemote then
                return ClaimRemote:InvokeServer()
            else
                warn("[TreatBag] Error: Could not find the 'ClaimTreatBag' remote event.")
                return false
            end
        end)
        
        if claimSuccess then
             warn("[TreatBag] Claim remote invoked successfully. Check your inventory for a reward!")
        else
             warn("[TreatBag] Failed to invoke the claim remote. Error: " .. tostring(claimResult))
        end
    end

    -- 3. Start the claiming cycle.
    -- Claim once immediately, then start the 10-minute loop.
    claimBag()
    while task.wait(600) do
        claimBag()
    end
end

-- Start the auto-claiming process in a new thread to prevent it from freezing your game or executor.
task.spawn(startAutoClaimer)
warn("Headless Horseman Treat Bag Auto-Claimer is now running in the background.")
